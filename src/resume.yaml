resume:

  header:
    name: Andrew Chang-DeWitt
    email: hire-me@andrew-chang-dewitt.dev
    phone: "8122660282"
    website: andrew-chang-dewitt.dev
    github: github.com/andrew-chang-dewitt
    title: Software Developer
  
  about-me: "I make web apps, API's, IoT programs, & cli utilities."
  
  experience:
    - title: 'Cheese Drawer (current project)'
      repo:
        href: https://github.com/cheese-drawer
        display: github.com/cheese-drawer
      stack:
          - Python
          - Typescript
          - Flask
          - Psycopg2
          - SqlAlchemy
          - React
          - React Native
          - PostgreSQL
          - MongoDB
          - AMQP 0-9-1
          - Docker
          - Mocha
          - React Testing Library
          - unittest
          - OOP
          - FP
          - microservices
      summary:
        - "Building a budgeting application, inspired by my favorite (now defunct) fintech product, currently a work in progress"
        - "Deploying back-end with Docker Swarm as a collection of microservices"
        - "Communication between services implemented with AMQP (using RabbitMQ), exposing endpoints to client applications over HTTP as a single RESTful Gateway API"
        - "Created AMQP worker library modeled after Flask's API"
        - "Writing in Python (Flask, Psycopg2, aio-pika) & Typescript (React) with data storage in PostgreSQL & MongoDB"
  
    - title: 'We Cook Sometimes'
      repo:
        href: https://github.com/andrew-chang-dewitt/we-cook-sometimes
        display: github.com/andrew-chang-dewitt/we-cook-sometimes
      more-info:
        href: ""
        display: "FIXME: no blog post yet, write & link to it here"
      stack:
        - Typescript
        - React
        - React-Router
        - SASS
        - CSS-modules
        - Webpack
        - Node
        - Express
        - NGINX
        - Mocha
        - Enzyme
        - React Testing Library
      summary:
        - "Created a single-page web application with React & Typescript to help my family & I pick something to cook & share our recipes"
        - "Implemented a [custom graph data structure object](https://andrew-chang-dewitt.dev/blog/posts/implementing-graphs-in-typescript) with iteration methods using depth-first search algorithm"
        - "Developed a [Result type for Typescript](https://andrew-chang-dewitt.dev/blog/posts/implementing-graphs-in-typescript), similar to Rust's Result enum, to encapsulate success & failure states"
        - "Built RESTful API to synchronize data Trello content (using Trello's API & webhooks) with NodeJS & MongoDB"
  
    - title: "Personal Website & Blog"
      url:
        href: https://andrew-chang-dewitt.dev
        display: andrew-chang-dewitt.dev
      repo:
        href: https://github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
        display: github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
      more-info:
        href: ""
        display: "FIXME: no blog post yet, write & link to it here"
      stack:
        - Typescript
        - Javascript
        - SASS
        - Gatsby
        - CSS-modules
        - Node
        - Express
        - NGINX
        - Mocha
        - Enzyme
        - React Testing Library
      summary:
        - "Built a personal website using Typescript, React, & Gatsby to promote myself as a software developer"
        - "Improved Gatsby's Reach Router dependency with a custom implementation of hash routing & anchor links"
        - "Implemented blog with dynamically generated post pages, post list page, & filtering/sorting using GraphQL & a custom React hook for managing query parameters"
        - "Next steps: convert the all the tests to Jest & rewrite any Enzyme tests to React Testing Library, Gatsby & Mocha don't play well together"
  
    - title: "Pi GPIO Sensor to MQTT Module"
      repo:
        href: https://github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
        display: github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
      more-info:
        href: ""
        display: "FIXME: no blog post yet, write & link to it here"
      stack:
        - Python
        - MQTT
        - pytest
        - Docker
      summary:
        - "Created an IOT microservice to monitor sensors attached to a Raspberry Pi's GPIO pins"
        - "Designed to communicate with a custom home security alarm system, as well Home Assistant for home automations"
        - "Distributed as a Dockerfile to aid in installation & maintenance"
        - "Reads configuration from a user-maintained YAML file"
        - "Implemented sensors as an extensible library to allow users to easily add new sensor types"
        - "Next steps: rewrite in Rust with compilation target being a microcontroller, such as Arduino or ESP32 board"
  
  employment:
    - title: "Department of Family Resources"
      positions:
        - job-title: "State Eligibility Consultant"
          employer: "State of Indiana"
          start: "June 2019"
          end: "August 2020"
        - job-title: "Eligibility Specialist Working Lead"
          employer: "Knowledge Services"
          start: "May 2018"
          end: "June 2019"
        - job-title: "Eligibility Specialist"
          employer: "Knowledge Services"
          start: "January 2018"
          end: "May 2018"
        - job-title: "Eligibility Specialist"
          employer: "Conduent"
          start: "August 2016"
          end: "December 2017"
      summary:
        - "Started as a contract employee & learned quickly, advancing to a lead position among a team of contractors"
        - "Promoted again to state employee in June of 2019"
        - "Communicated directly with clients to solve issues & share information"
        - "Trained new employees & worked with experienced employees improve customer service, communication, & problem-solving skills"
        - "Collaborated with local office & regional management to improve business processes for efficiency & accuracy"
  
  education:
    - school: "Indiana University—Purdue University Indianapolis"
      degree: "BS in Informatics"
      minor: "Computer & Information Science"
      date: "December 2023"
      location: "Indianapolis, Indiana"
    # - school: "Ball State University"
    #   date:
    #     start: 2009
    #     end: 2013
    #   location: "Muncie, IN"
    #   description: "Completed 113 credits towards a Bachelor's of Landscape Architecture"
  
  # don't list intro courses, stick to more advanced &
  # in-depth/detailed courses or series of courses
  # professional-development:
  #   - title: "an example course"
  #     provider: "edX"
  #     year: 0000
=======
about-me: "I'm a self-taught software developer seeking my first job in the industry."

experience:
  - title: 'We Cook Sometimes'
    url:
      href: https://we-cook-sometimes.andrew-chang-dewitt.dev
      display: we-cook-sometimes.andrew-chang-dewitt.dev
    repo:
      - href: https://github.com/andrew-chang-dewitt/we-cook-sometimes
        display: github.com/andrew-chang-dewitt/we-cook-sometimes
      - href: https://github.com/andrew-chang-dewitt/we-cook-sometimes-server
        display: github.com/andrew-chang-dewitt/we-cook-sometimes-server
    more-info:
      href: "/blog/tags/project:-we-cook-sometimes"
      display: "andrew-chang-dewitt.dev/blog/tags/project:-we-cook-sometimes"
    stack:
      - Typescript
      - SASS
      - React
      - React-Router
      - CSS-modules
      - Mocha
      - Enzyme
      - React Testing Library
      - Webpack
      - Node
      - Express
      - RESTful API
      - NGINX
    summary:
      - "A single-page web application to help my family & I pick something to cook"
      - "Hosts shared recipes for posts made to a cooking Instagram account my wife & I run"
      - "Implemented [a custom graph data structure utility](https://andrew-chang-dewitt.dev/blog/posts/implementing-graphs-in-typescript) for representing relationships between questions"
      - "Developed [a Result type](/blog/posts/rust-result-typescript), similar to Rust's Result enum, to encapsulate success & failure states"
      - "Stores data in MongoDB & serves it from a REST API built with Node & Express"
      - "API sources data from Trello content, updates using webhooks from Trello, & checks for missed changes using a scheduled job"

  - title: "Personal Website & Blog"
    url:
      href: https://andrew-chang-dewitt.dev
      display: andrew-chang-dewitt.dev
    repo:
      href: https://github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
      display: github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
    more-info:
      href: "/blog/posts/personal-website"
      display: "andrew-chang-dewitt.dev/blog/posts/personal-website"
    stack:
      - Typescript
      - Javascript
      - SASS
      - Gatsby
      - CSS-modules
      - Node
      - Express
      - Mocha
      - Enzyme
      - React Testing Library
      - NGINX
    summary:
      - "A personal website to promote myself as a software developer"
      - "Utilizes custom implementation of hash routing & anchor links on top of Reach Router"
      - "Implemented blog with dynamically generated post pages, post list page, & filtering/sorting using GraphQL & a custom React hook for managing query parameters"
      - "Found Gatsby & Mocha difficult to get to play well together—in the future, would like to convert the all the tests to Jest & rewrite any Enzyme tests to React Testing Library"

  - title: "Pi GPIO Sensor to MQTT Module"
    repo:
      href: https://github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
      display: github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
    more-info:
      href: "/blog/posts/rpi-gpio-sensors-mqtt"
      display: "andrew-chang-dewitt.dev/blog/posts/rpi-gpio-sensors-mqtt"
    stack:
      - Python
      - MQTT
      - pytest
      - Docker
      - Alpine Linux
      - bash
    summary:
      - "An IOT microservice to monitor sensors attached to a Raspberry Pi's GPIO pins"
      - "Intended to communicate with a custom home security alarm system, as well Home Assistant for home automations"
      # - "Publishes sensor events & system status via MQTT on a local network"
      - "Uses [Functional Core, Imperative Shell](https://www.destroyallsoftware.com/screencasts/catalog/functional-core-imperative-shell) design pattern"
      - "Distributed as a Dockerfile to aid in installation & maintenance"
      - "Reads configuration from a user-maintained YAML file"
      - "Implemented sensors as an extensible library to allow users to easily add new sensor types"
      - "Planning to rewrite in Rust to be compiled for running on a microcontroller, such as Arduino or ESP32 board"

employment:
  - title: "Department of Family Resources"
    positions:
      - job-title: "State Eligibility Consultant"
        employer: "State of Indiana"
        start: "June 2019"
        end: "August 2020"
      - job-title: "Eligibility Specialist Working Lead"
        employer: "Knowledge Services"
        start: "May 2018"
        end: "June 2019"
      - job-title: "Eligibility Specialist"
        employer: "Knowledge Services"
        start: "January 2018"
        end: "May 2018"
      - job-title: "Eligibility Specialist"
        employer: "Conduent"
        start: "August 2016"
        end: "December 2017"
    summary:
      - "Started as a contract employee & learned quickly, advancing to a lead position among a team of contractors"
      - "Promoted again to state employee in June of 2019"
      - "Worked directly with clients to assist in understanding, obtaining, & changing benefits"
      - "Trained new employees & worked with experienced employees to make improvements where necessary"
      - "Collaborated with local office & regional management to improve business processes for efficiency & accuracy"

education:
  - school: "Ball State University"
    start: 2009
    end: 2013
    location: "Muncie, IN"
    description: "Completed 113 credits towards a Bachelor's of Landscape Architecture"

# don't list intro courses, stick to more advanced &
# in-depth/detailed courses or series of courses
# professional-development:
#   - title: "an example course"
#     provider: "edX"
#     year: 0000
