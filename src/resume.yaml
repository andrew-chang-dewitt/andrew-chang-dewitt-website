resume:

  header:
    name: Andrew Chang-DeWitt
    email: hire-me@andrew-chang-dewitt.dev
    phone: "8122660282"
    website: andrew-chang-dewitt.dev
    github: github.com/andrew-chang-dewitt
    title: Software Developer

  about-me: "I make web apps, API's, IoT programs, & cli utilities."

  experience:
    - title: 'Hoops'
      repo:
        - href: https://github.com/andrew-chang-dewitt/hoops-web
          display: github.com/andrew-chang-dewitt/hoops-web
        - href: https://github.com/andrew-chang-dewitt/hoops-api
          display: github.com/andrew-chang-dewitt/hoops-api
      stack:
          - Python
          - TypeScript
          - FastAPI
          - PostgreSQL
          - Svelte
          - Unit testing
          - FP
          - OOP
      description: "A budgeting application to empower my wife & I to better organize our financial future; inspired by favorite (now defunct) fintech product; & built with a RESTful API written in Python/FastAPI with PostgreSQL on the backend & an isomorphic web application in progress being written in TypeScript/SvelteKit for the frontend."
      summary:
        - "Building a budgeting application, inspired by my favorite (now defunct) fintech product, currently a work in progress"
        - "Backend REST API built with Python (FastAPI) & PostgreSQL (psycopg2)"
        - "Implemented secure user login as API generating OAuth2-compliant JWT Bearer tokens"
        - "Built a custom OOP wrapper on psycopg2 & aiopg to extend with simple ORM & asynchronous connection management & query execution"
        - "Writing front ends for web & mobile in TypeScript (SvelteKit/Svelte Native)"

    - title: 'JSpec'
      repo:
        - href: https://github.com/andrew-chang-dewitt/jspec
          display: github.com/andrew-chang-dewitt/jspec
      stack:
        - Java
        - Unit testing
        - OOP
        - Data structures & algorithms
        - Library API design
        - CLI tooling
      description: "A Java testing library, test runner, & cli built as a university course's final project. Building this was a powerful and fun way to dive deeper into Java after only a few weeks of learning the basics by utilizing Java's powerful introspection and reflection capabilities to traverse objects and customize compilation. JSpec was also a great excuse to practice days and algorithms by building a custom implementation of doubly linked lists & n-ary trees, complete with traversal algorithms & collection manipulation methods such as `reduce()`, `map()`, & `forEach()`; used for storing test result state before rendering."

    - title: 'DB Wrapper & AMQP Worker'
      repo:
        - href: https://github.com/cheese-drawer/lib-python-db-wrapper
          display: github.com/cheese-drawer/lib-python-db-wrapper
        - href: https://github.com/cheese-drawer/lib-python-amqp-worker
          display: github.com/cheese-drawer/lib-python-amqp-worker
      stack:
        - Python
        - PostgreSQL
        - AMQP 0-9-1
        - Unit testing
        - OOP
        - Type systems & static typing
        - Library API design
        - Microservices
        - Data modeling and validation
      description: "A pair of async, typesafe libraries intended to be used in a microservice-based and Docker-orchestrated implementation of Hoops (which has since pivoted to a monolithic backend). First is an ORM & db connection/query library driven by Psycopg2 with runtime type validation in an intuitive API. Second is a library for building services that communicate over AMQP with a simple, Flask-like API."

    - title: 'Guessing game'
      repo:
        - href: https://github.com/andrew-chang-dewitt/learning-rust-guessing-game
          display: github.com/andrew-chang-dewitt/learning-rust-guessing-game
      stack:
          - Rust
          - Unit testing
          - Data structures & algorithms
          - CLI tooling
      description: "A simple guessing game being built as a hobby project while learning Rust & practicing algorithms & data structures. Will be creating a series simple of 'AI' players to make guesses using different algorithms, including linear, jump, binary & other searches all to be compared to random guessing."

    # - title: 'We Cook Sometimes'
    # - repo:
    # -   - href: https://github.com/andrew-chang-dewitt/we-cook-sometimes
    # -     display: github.com/andrew-chang-dewitt/we-cook-sometimes
    # -   - href: https://github.com/andrew-chang-dewitt/we-cook-sometimes-server
    # -     display: github.com/andrew-chang-dewitt/we-cook-sometimes-server
    # - moreInfo:
    # -   href: "/blog/tags/project:-we-cook-sometimes"
    # -   display: "andrew-chang-dewitt.dev/blog/tags/project:-we-cook-sometimes"
    # - stack:
    # -   - TypeScript
    # -   - React
    # -   - Node
    # -   - Express
    # -   - MongoDB
    # -   - RESTful API
    # -   - Unit testing
    # -   - OOP
    # -   - Functional Composition
    # - description: "A TypeScript & React SPA with a MongoDB & Node/Express backend for sharing recipes. Uses Trello as a CMS & keeps the backend up to date with webhooks & serves data to frontend via RESTful API. Includes feature to help us finally figure out what to cook for dinner by traversing set of questions modeled as a graph using a [custom graph data structure object](https://andrew-chang-dewitt.dev/blog/posts/implementing-graphs-in-typescript)."
    # - summary:
    # -   - "Created a single-page web application with React & TypeScript to help my family & I pick something to cook & share our recipes"
    # -   - "Implemented a [custom graph data structure object](https://andrew-chang-dewitt.dev/blog/posts/implementing-graphs-in-typescript) with iteration methods using depth-first search algorithm"
    # -   - "Developed a [Result type for TypeScript](https://andrew-chang-dewitt.dev/blog/posts/rust-result-typescript), similar to Rust's Result enum, to encapsulate success & failure states, eliminating many runtime errors by forcing function callers to handle the possible error"
    # -   - "Built RESTful API to synchronize data Trello content (using Trello's API & webhooks) with NodeJS & MongoDB"

    # - title: "Personal Website & Blog"
    #   url:
    #     href: https://andrew-chang-dewitt.dev
    #     display: andrew-chang-dewitt.dev
    #   repo:
    #     - href: https://github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
    #       display: github.com/andrew-chang-dewitt/andrew-chang-dewitt-website
    #   moreInfo:
    #     href: "/blog/posts/personal-website"
    #     display: "andrew-chang-dewitt.dev/blog/posts/personal-website"
    #   stack:
    #     - TypeScript
    #     - JavaScript
    #     - Gatsby
    #     - CSS-modules
    #     - Pandoc
    #     - Puppeteer
    #     - Node
    #     - Express
    #     - NGINX
    #     - Mocha
    #     - Enzyme
    #     - React Testing Library
    #     - FP
    #     - Unit testing
    #     - Responsive UI/UX design
    #   description: "A personal website & blog written in TypeScript w/ React & Gatsby with a single endpoint in NodeJS/Express for the contact form & using GraphQL to dynamically source markdown files for blog content."
    #   summary:
    #     - "Built a personal website using TypeScript, React, & Gatsby to promote myself as a software developer"
    #     - "Improved Gatsby's Reach Router dependency with a custom implementation of hash routing & anchor links"
    #     - "Implemented blog with dynamically generated post pages, post list page, & filtering/sorting using GraphQL & custom query parameter React hook"
    #     - "Reduced complexity to edit, build, & deploy resume content from 12 steps to 3 by creating script to generate HTML/CSS (via JSX/SASS), markdown, docs, and PDF versions during CI/CD, decreasing build & deploy time by at least 30 minutes"

    # - title: "Pi GPIO Sensor to MQTT Module"
    #  repo:
    #    - href: https://github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
    #      display: github.com/andrew-chang-dewitt/rpi-security-gpio2mqtt
    #  moreInfo:
    #    href: "/blog/posts/rpi-gpio-sensors-mqtt"
    #    display: "andrew-chang-dewitt.dev/blog/posts/rpi-gpio-sensors-mqtt"
    #  stack:
    #    - Python
    #    - MQTT
    #    - Docker
    #    - OOP
    #    - Unit testing
    #    - Unit testing
    #  description: "A small IOT service written in Python to read sensors attached to a Raspberry Pi's GPIO pins & broadcast status changes over MQTT; intended for use as part of a home automation & security system."
    #  summary:
    #    - "Created an IOT microservice to monitor sensors attached to a Raspberry Pi's GPIO pins"
    #    - "Designed to communicate with a custom home security alarm system, as well Home Assistant for home automations"
    #    - "Distributed as a Dockerfile to aid in installation & maintenance"
    #    - "Implemented sensors as an extensible library to allow users to easily add new sensor types"
    #    - "Next steps: rewrite in Rust with compilation target being a microcontroller, such as Arduino or ESP32 board"

  employment:
    - title: "Software Engineering Internship"
      positions:
        - job-title: "Web Engineering Intern"
          employer: "Tinder (Match Group)"
          start: "June 2022"
          end: "current"
      skills:
        - React
        - Redux
        - Redux-saga
        - TypeScript
        - NodeJS
        - git
        - GitHub
        - Project Planning
        - Feature Design
      summary:
        - "Led implementation planning for and worked with a cross-disciplinary team including engineering, product, & design to develop a new feature shipped on Tinder's web app in late Q3 of 2022, impacting tens of millions of users"
        - "Participated in the code-review & release process as well as regular, informal Scrum ceremonies with my small engineering team, including stand-ups, iteration planning, & retrospectives, often including outside stakeholders"
        - "Assisted in migrating JavaScript typed in Flow to TypeScript across the application"
        - "Worked with a team of interns from ideation through design & rough implementation of a proposed new feature for a company-wide hackathon"
        - "Improved the Web experience for tens of millions of users by identifying and shipping fixes for a11y & i18n bugs throughout the Tinder application"
        - "Fixed security bugs in web application & backend services"

    - title: "Web Development Internship"
      positions:
        - job-title: "Assistant Web Master"
          employer: "IUPUI Center for Teaching and Learning"
          start: "August 2021"
          end: "May 2022"
      skills:
        - .NET MVC
        - Razor
        - C#
        - Python
        - JavaScript
        - TypeScript
        - NodeJS
        - Vue
        - HTML
        - CSS
      summary:
        - "Updated outdated .NET Razor views from Bootstrap/JQuery to IU's modern css framework, improving page load times"
        - "Implemented additional features in HTML, CSS, & vanilla JS (or Vue, where applicable)"
        - "Built dev tools in Python & TypeScript to automate data & file collection & formatting"

    - title: "Department of Family Resources"
      positions:
        - job-title: "State Eligibility Consultant"
          employer: "State of Indiana"
          start: "June 2019"
          end: "August 2020"
        - job-title: "Team Lead"
          employer: "Knowledge Services"
          start: "May 2018"
          end: "June 2019"
        - job-title: "Eligibility Specialist"
          employer: "Conduent, Knowledge Services"
          start: "August 2016"
          end: "May 2018"
      summary:
        - "Assisted clients in solving problems in the cases/applications, correcting their benefit eligibility & advised them on complicated policies & processes"
        - "Trained 12 new employees & worked with a team of experienced employees to improve their customer service, communication, & problem-solving skills"
        - "Collaborated with local office & regional management to improve business processes for efficiency & accuracy, saving 90+ minutes/day when generating reports & assigning case loads"
      skills:
        - Leadership
        - Coaching & mentorship
        - Communication
        - Project planning

  education:
    - school: "Indiana University—Purdue University, Indianapolis"
      degree: "B.S."
      major: "Computer Science"
      minor: ""
      location: "Indianapolis, Indiana"
      date: "In progress"
    # - school: "Ball State University"
    #   date:
    #     start: 2009
    #     end: 2013
    #   location: "Muncie, IN"
    #   description: "Completed 113 credits towards a Bachelor's of Landscape Architecture"

  # don't list intro courses, stick to more advanced &
  # in-depth/detailed courses or series of courses
  # professional-development:
  #   - title: "an example course"
  #     provider: "edX"
  #     year: 0000
